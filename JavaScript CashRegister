function checkCashRegister(price, cash, cid) {
  let currency = {
    PENNY : 0.01,
    NICKEL : 0.05,
    DIME : 0.1,
    QUARTER : 0.25,
    ONE : 1,
    FIVE : 5,
    TEN : 10,
    TWENTY : 20,
    'ONE HUNDRED' : 100
  };
  let status = {
    0:"INSUFFICIENT_FUNDS",
    1:"CLOSED",
    2:"OPEN"
  }
  let resStatus = -1;

  let diff = cash - price;
  if (diff == 0) {
    resStatus = 1;
  } else if (diff < 0) {
    resStatus = 0;
  };
  let newCid = cid.slice().map(elem => elem.slice())
  //Cannot return exact || calc exact
  let change = [];
  let table = [100,20,10,5,1,0.25,0.1,0.05,0.01];
  for (let i = 0; i < table.length; i++) {
    let currVal = newCid[table.length-1-i];
    let tempArr = [];
    while (diff >= table[i]) {
      //to give change >= current coin value
      //console.log(currVal, diff)
      if (currVal[1] - table[i] >= 0) {
        currVal[1] = Math.round((currVal[1] - table[i])*1000)/1000
        diff = Math.round((diff - table[i])*1000)/1000
        if (tempArr.length== 0) {
          tempArr = [currVal[0], table[i]]
        } else {
          tempArr[1] = Math.round((tempArr[1] + table[i])*1000)/1000
        };
      } else {
        break
      }
    
    }
    if (tempArr.length != 0) change.push([...tempArr]);
  }
  console.log(change);
  let money = newCid.map(item => item[1]).every(item => item == 0);
  console.log(money)
  if (resStatus == -1){
    if (diff == 0 && !money) {
      resStatus = 2;
    } else if (money && diff==0) {
      resStatus = 1;
    } else {
      resStatus = 0;
    }
}
  return {status: `${status[resStatus]}`, 'change': (resStatus == 2) ? change : (resStatus== 1) ? cid : []}


  console.log(change);
  //console.log(table.length,cid.length);
  return change;
}

console.log(checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]])) 
